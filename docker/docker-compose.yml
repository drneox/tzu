services:
  postgresql:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tzu_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tzu_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tzu_net

  backend:
    build: 
      context: ..
      dockerfile: docker/Dockerfile.backend
    command: ["./backend.entrypoint.sh"]
    # volumes: # Uncomment for development
    #   - ../api:/app
    volumes:
      - diagrams_data:/app/diagrams  # Volumen persistente para diagramas
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgresql:5432/tzu_db
    env_file:
      - ../.env
    networks:
      - tzu_net

  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/Dockerfile.frontend
    volumes:
      - frontend_build:/app
    networks:
      - tzu_net

  nginx:
    image: nginx:alpine
    depends_on:
      - backend
      - frontend
    ports:
      - "3434:3434"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/usr/share/nginx/html:ro
      - diagrams_data:/usr/share/nginx/diagrams:ro  # Servir diagramas estáticamente
    networks:
      - tzu_net

volumes:
  postgres_data:
  frontend_build:
  diagrams_data:  # Volumen persistente para las imágenes de diagramas

networks:
  tzu_net:
    driver: bridge
